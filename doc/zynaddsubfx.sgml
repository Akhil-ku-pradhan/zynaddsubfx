<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<book>

  <bookinfo>
    <title>Zynaddsubfx</title>
    <author>
      <!-- Just add yourself as an author when you work on the book -->
      <personname>
        <firstname>Paul</firstname> <surname>Nasca</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Mark</firstname> <surname>McCurry</surname>
      </personname>
    </author>

    <abstract>
      <para>
        This document is a used to detail the features and use of
        the ZynAddSubFX synthisizer.
      </para>
    </abstract>

  </bookinfo>

  <chapter>
    <title>Introduction</title>

     <para>
       ZynAddSubFX is a synthisizer, which uses several components to generate 
       sound.
     </para>

  </chapter>

  <chapter>
    <title>Getting Started</title>
    <para>
      In most cases ZynAddSubFX is used it will not alone, and it will be linked
      with other programs.
    </para>
    <sect1>
      <title>MIDI</title>
      <para>
        MIDI can be used to connect other applications into ZynAddSubFX.
        One standard tool to connect ZynAddSubFX with other programs is
        aconnect.
      </para>
      <para>
        ZynAddSubFX has one incomming MIDI port.
        Once another application is connected to this port, then it should be
        able to send information on notes, pitches, and modulations to
        ZynAddSubFX.
        For more specific information see INSERT CHAPTER NAME HERE.
      </para>
    </sect1>
    <sect1>
      <title>JACK</title>
      <para>
        JACK can be used to connect the output of ZynAddSubFX to other
        applications
      </para>
    </sect1>
  </chapter>

  <chapter>
    <title>Filters</title>
    <para>
      In ZynAddSubFX filters can be used at several different stages to
      increase or decrease a defined set of frequencys.
    </para>
    <table>
      <title>Types of Filters</title>
      <tgroup cols='3' align='left' colsep='1' rowsep='1'>
        <thead>
          <row>
            <entry>Short Name</entry>
            <entry>Full Name</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>LPF</entry>
            <entry>Low Pass Filter</entry>
            <entry>Higher frequencies are removed</entry>
          </row>
          <row>
            <entry>HPF</entry>
            <entry>High Pass Filter</entry>
            <entry>Lower frequencies are removed</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </chapter>

  <chapter>
    <title>LFOs</title>
    <para>
      The Low Frequency Ocillators are used within ZynAddSubFX to modify the 
      parameters of the Part's frequency, filter, and amplitude.
    </para>
  </chapter>

  <chapter>
    <title>Envelopes</title>
    <sect1>
      <title>Introduction</title>
      <para>Envelopes control how the amplitude, the frequency, or the
        filter changes over time.</para>
      <sect2>
        <title>Amplitude Envelopes</title>
        <para>
          Theese envelopes controls the amplitude of the sound.
          In ZynAddSubFX, amplitude envelopes can be linear or logarithmic. 
          In the next image, it is shown the differences between these
          envelopes. 
        </para>
        <mediaobject>
          <imageobject>
            <imagedata align="left" format="PNG"
              fileref="images/envelope1.png"/>
          </imageobject>
        </mediaobject>
        <para>
          The amplitude envelope is divided into:
        </para>
        <itemizedlist mark="bullet">
          <listitem>
            <para>
              Attack - begins at the Note On.
              The volume starts from 0 to the maximum.
              In ZynAddSubFX, the attack is always linear.
            </para>
          </listitem>
          <listitem>
            <para>
              Decay - the volume drops from the maximum value to a level called
              "Sustain level"
            </para>
          </listitem>
          <listitem>
            <para>
              Sustain - the volume remains constant until the key is depressed
              (Note Off).
              After this, the last stage take place.
            </para>
          </listitem>
          <listitem>
            <para>
              Release - the volume drops to zero
            </para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Frequency Envelopes</title>
        <para>
          These envelopes controls the frequency (more exactely, the pitch) of
          the oscillators.
          The folowing picture draws the stages of theese envelopes.
          <inlinemediaobject>
            <imageobject>
              <imagedata align="left" format="PNG"
                fileref="images/envelope2.png"/>
            </imageobject>
          </inlinemediaobject>
          The dotted line represents the real pitch of the sound without the
          envelope.
          The frequency envelopes are divided into 3 stages:
        </para>
        <itemizedlist mark="bullet">
          <listitem><para>
              Attack - begins at the Note On.
              The frequency starts from a certain value and glides to the
              real frequency of the note.
          </para></listitem>
          <listitem><para>
              Sustain - the frequency is the same on over the sustain period 
          </para></listitem>
          <listitem><para>
              Release - this stage begins on Note Off and glides the frequency 
              of the note to a certain value
          </para></listitem>
        </itemizedlist>
      </sect2>
    </sect1>
  </chapter>

  <chapter>
      <title>Ocillators</title>
    <para>
      The Ocillators are what generate the base sound for a part before it is
      modified.
    </para>
  </chapter>

  <chapter>
    <title>Types of Synthesis</title>
    <sect1>
      <title>ADDsynth</title>
      <para>
        The ADDsynth preforms additive synthisis 
      </para>
    </sect1>
    <sect1>
      <title>SUBsynth</title>
      <para>
        The SUBsynth is responsible of the subtractive synthesis in ZynAddSubFX.
      </para>
    </sect1>
    <sect1>
      <title>PADsynth</title>
      <para>
        The PADsynth uses the PAD synthisis algorithm created by Paul Nasca
      </para>
    </sect1>
  </chapter>

</book>
