# data file for the Fltk User Interface Designer (fluid)
version 1.0104 
header_name {.h} 
code_name {.cc}
decl {//Copyright (c) 2002-2003 Nasca Octavian Paul} {} 

decl {//License: GNU GPL version 2} {} 

decl {\#include <stdio.h>} {public
} 

decl {\#include <math.h>} {public
} 

decl {\#include <stdlib.h>} {selected public
} 

decl {\#include "../globals.h"} {public
} 

decl {\#include "../Misc/Util.h"} {public
} 

decl {\#include "../Misc/Dump.h"} {public
} 

decl {extern Dump dump;} {public
} 

class ConfigUI {} {
  Function {make_window()} {} {
    Fl_Window configwindow {
      label {ZynAddSubFX Settings}
      xywh {41 80 500 290} hide
    } {
      Fl_Button {} {
        label OK
        callback {configwindow->hide();}
        xywh {70 255 100 20} box THIN_UP_BOX
      }
      Fl_Group {} {
        label {Sample Rate}
        xywh {5 25 165 30} box ENGRAVED_FRAME
      } {
        Fl_Choice {} {
          callback {if ((int)o->value()==0) samplerateinput->activate();
       else samplerateinput->deactivate();

int samplerates[7]={44100,16000,22050,32000,44100,48000,96000};
config.cfg.SampleRate=samplerates[(int)o->value()];

setsamplerateinput();}
          xywh {10 30 85 20} down_box BORDER_BOX textsize 10
          code0 {o->value(getsamplerateorder());}
        } {
          menuitem {} {
            label Custom
            xywh {0 0 100 20} labelfont 1
          }
          menuitem {} {
            label 16000Hz
            xywh {20 20 100 20} labelfont 1
          }
          menuitem {} {
            label 22050Hz
            xywh {10 10 100 20} labelfont 1
          }
          menuitem {} {
            label 32000Hz
            xywh {20 20 100 20} labelfont 1
          }
          menuitem {} {
            label 44100Hz
            xywh {30 30 100 20} labelfont 1
          }
          menuitem {} {
            label 48000Hz
            xywh {40 40 100 20} labelfont 1
          }
          menuitem {} {
            label 96000Hz
            xywh {50 50 100 20} labelfont 1
          }
        }
        Fl_Input samplerateinput {
          callback {char *tmp;
config.cfg.SampleRate=strtoul(o->value(),&tmp,10);}
          xywh {105 30 60 20} type Int textfont 1
          code0 {setsamplerateinput();}
          code1 {if (getsamplerateorder()!=0) o->deactivate();}
        }
      }
      Fl_Input {} {
        label {Buffer Size}
        callback {char *tmp;
config.cfg.SoundBufferSize=strtoul(o->value(),&tmp,10);}
        tooltip {Internal Sound Buffer Size (samples)} xywh {180 30 60 20} type Int labelsize 12 align 129 textfont 1
        code0 {char *tmpbuf=new char[100];o->cut(0,o->maximum_size());}
        code1 {snprintf(tmpbuf,100,"%d",config.cfg.SoundBufferSize);o->insert(tmpbuf);}
        code2 {delete(tmpbuf);}
      }
      Fl_Light_Button {} {
        label {Swap Stereo }
        callback {config.cfg.SwapStereo=(int) o->value();}
        xywh {10 60 85 20} box THIN_UP_BOX labelsize 11
        code0 {o->value(config.cfg.SwapStereo);}
      }
      Fl_Choice {} {
        label OscilSize
        callback {config.cfg.OscilSize=128<<o->value();}
        tooltip {ADSynth Oscillator Size (samples)} xywh {165 60 75 20} down_box BORDER_BOX labelfont 1 labelsize 12 textsize 10
        code0 {o->value( (int) (log(config.cfg.OscilSize/128.0-1.0)/log(2)) +1);}
      } {
        menuitem {} {
          label 128
          xywh {15 15 100 20} labelfont 1
        }
        menuitem {} {
          label 256
          xywh {25 25 100 20} labelfont 1
        }
        menuitem {} {
          label 512
          xywh {35 35 100 20} labelfont 1
        }
        menuitem {} {
          label 1024
          xywh {35 35 100 20} labelfont 1
        }
        menuitem {} {
          label 2048
          xywh {45 45 100 20} labelfont 1
        }
        menuitem {} {
          label 4096
          xywh {45 45 100 20} labelfont 1
        }
        menuitem {} {
          label 8192
          xywh {55 55 100 20} labelfont 1
        }
        menuitem {} {
          label 16384
          xywh {65 65 100 20} labelfont 1
        }
      }
      Fl_Box {} {
        label {The settings has effect only after ZynAddSubFX is restarted.}
        xywh {10 210 235 30} labelfont 1 labelsize 12 align 128
      }
      Fl_Box {} {
        label {Read the Readme.txt for other settings}
        xywh {5 190 240 20} labelfont 1 labelsize 12 align 128
      }
      Fl_Group {} {
        xywh {5 95 230 85} box ENGRAVED_BOX
      } {
        Fl_File_Input {} {
          label {Dump File}
          callback {snprintf(config.cfg.DumpFile,config.maxstringsize,"%s",o->value());}
          xywh {10 140 220 35} align 5
          code0 {o->insert(config.cfg.DumpFile);}
        }
        Fl_Check_Button {} {
          label {Dump notes}
          callback {config.cfg.DumpNotesToFile=(int) o->value();
dump.startnow();//this has effect only if this option was disabled}
          xywh {10 100 100 20} down_box DOWN_BOX
          code0 {o->value(config.cfg.DumpNotesToFile);}
        }
      }
      Fl_Group {} {
        xywh {250 15 245 275} box ENGRAVED_FRAME
      } {
        Fl_Box {} {
          label {Note: Not all the following settings are used (this depends on the operating system, etc..)}
          xywh {255 25 235 45} labelfont 1 labelsize 12 align 128
        }
        Fl_Group {} {
          label Linux
          xywh {255 95 235 115} box ENGRAVED_BOX labelfont 1 labelsize 16 align 5
        } {
          Fl_File_Input {} {
            label {OSS Sequencer Device (/dev/...)}
            callback {snprintf(config.cfg.LinuxOSSSeqInDev,config.maxstringsize,"%s",o->value());}
            xywh {260 165 225 35} align 5
            code0 {o->insert(config.cfg.LinuxOSSSeqInDev);}
          }
          Fl_File_Input {} {
            label {OSS Wave Out Device (/dev/...)}
            callback {snprintf(config.cfg.LinuxOSSWaveOutDev,config.maxstringsize,"%s",o->value());}
            xywh {260 115 225 35} align 5
            code0 {o->insert(config.cfg.LinuxOSSWaveOutDev);}
          }
        }
        Fl_Group {} {
          label Windows
          xywh {255 235 235 50} box ENGRAVED_BOX labelfont 1 labelsize 16 align 5
        } {
          Fl_Counter {} {
            label {Midi In Dev}
            callback {config.cfg.WindowsMidiInId=(int) o->value();
midiinputnamebox->label(config.winmididevices[config.cfg.WindowsMidiInId].name);}
            xywh {265 255 65 20} type Simple labelsize 12 align 1 minimum 0 maximum 100 step 1
            code0 {o->maximum(config.winmidimax-1);}
            code1 {o->value(config.cfg.WindowsMidiInId);}
          }
          Fl_Box midiinputnamebox {
            label {Midi input device name}
            xywh {335 245 150 35} labelfont 1 labelsize 12 align 212
            code0 {o->label(config.winmididevices[config.cfg.WindowsMidiInId].name);}
          }
        }
      }
      Fl_Check_Button {} {
        label Append
        callback {config.cfg.DumpAppend=(int) o->value();}
        xywh {150 100 80 20} down_box DOWN_BOX
        code0 {o->value(config.cfg.DumpAppend);}
      }
    }
  }
  Function {ConfigUI()} {} {
    code {make_window();} {}
  }
  Function {getsamplerateorder()} {return_type int
  } {
    code {int smpr=config.cfg.SampleRate;
int order=0;
switch(smpr){
   case 16000:order=1;break;
   case 22050:order=2;break;
   case 32000:order=3;break;
   case 44100:order=4;break;
   case 48000:order=5;break;
   case 96000:order=6;break;
   default:order=0;break;
};
return(order);} {}
  }
  Function {setsamplerateinput()} {return_type void
  } {
    code {char *tmpbuf=new char[100];
samplerateinput->cut(0,samplerateinput->maximum_size());
snprintf(tmpbuf,100,"%d",config.cfg.SampleRate);
samplerateinput->insert(tmpbuf);
delete (tmpbuf);} {}
  }
  Function {show()} {} {
    code {configwindow->show();} {}
  }
} 
